name: CI
on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  schedule:
    - cron: "0 0 * * *"
jobs:
  test:
    name: Test on ${{ matrix.os }}, Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v1
    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a
    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        environment-file: devtools/conda-envs/test_env.yaml
        channels: conda-forge,defaults
        activate-environment: test
        auto-update-conda: false
        auto-activate-base: false
        show-channel-urls: true
    - name: Install package
      shell: bash -l {0}
      run: |
        python -m pip install . --no-deps
        conda install -c conda-forge biopandas
        conda install -c conda-forge mendeleev
        conda install -c conda-forge openmm
        conda install -c conda-forge parmed
        conda config --add channels omnia --add channels conda-forge
        conda install openforcefield
        conda install openbabel -c conda-forge
        conda list
    - name: Run tests
      shell: bash -l {0}
      run: |
        pytest -v --cov=qmmmrebind --cov-report=xml --color=yes qmmmrebind/tests/
    - name: CodeCov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}
